{"version":3,"sources":["components/header/header.tsx","components/expandedButton/expandedButton.tsx","components/wordCard/wordCard.tsx","services/config.ts","components/leitnerWordCard/leitnerWordCard.tsx","pages/translate/translate.tsx","pages/leitner/leitner.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","actionClick","leadingClick","title","action","leading","className","btnClick","icon","expanded","expandedText","ExpandedButton","onClick","WordCard","text","BASE_URL","LeitnerWordCard","qs","require","React","useState","word","sayWord","start","getStart","words","getWords","index","setIndex","now","getNow","time","getTime","alertMessage","showAlertMessage","globalCycle","oneDay","useEffect","setTimeout","clearTimeout","get_start","a","_now","Date","axios","post","stringify","time_stamp","res","Object","keys","data","length","remember","cycle","status","soso_remember","not_remember","TranslatePage","state","alert","alert_message","translate","translateReadOnly","this","setState","wordChange","e","target","value","translateClick","addToLeitner","response","props","history","push","readOnly","onDoubleClick","onChange","autoFocus","onKeyPress","key","shiftKey","Component","withRouter","LeitnerPage","goBack","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd17745c.chunk.js","sourcesContent":["import React from 'react';\nimport { Archive, ChevronRight } from 'react-feather';\nimport { ExpandedButton } from '..';\n\ninterface headerProps {\n    title?: string,\n    actionClick?: any,\n    leadingClick?: any,\n    action?: boolean,\n    leading?: boolean,\n}\n\nconst Header: React.FC<headerProps> = ({\n    actionClick,\n    leadingClick,\n    title,\n    action = true,\n    leading = true,\n}) => {\n    return (\n        <div className='header'>\n            <div className='header__titleLeading'>\n                {leading &&\n                    <ExpandedButton\n                        btnClick={leadingClick}\n                        icon={<ChevronRight />}\n                        className='header__leading'\n                        expanded={false}\n                    />\n                }\n                <h4>{title}</h4>\n            </div>\n            {action &&\n                <ExpandedButton\n                    icon={<Archive />}\n                    expandedText=\"جعبه لایتنر\"\n                    btnClick={actionClick}\n                    className='header__actions'\n                />\n            }\n        </div>\n    )\n}\n\nexport default Header;","import React from 'react';\n\ninterface expandedBtnProps {\n    expandedText?: string,\n    icon: React.ReactNode,\n    btnClick?: any,\n    className?: string,\n    expanded?: boolean,\n}\n\nconst ExpandedButton: React.FC<expandedBtnProps> = ({\n    expandedText,\n    className,\n    expanded = true,\n    btnClick,\n    icon,\n}) => {\n    return (\n        <div className={'expandedButton ' + className} onClick={btnClick}>\n            {expanded && <span>{expandedText}</span>}\n            {icon}\n        </div>\n    )\n}\n\nexport default ExpandedButton;","import React from 'react';\n\ninterface wordCardProps {\n    text?: string,\n}\n\nconst WordCard: React.FC<wordCardProps> = ({ text }) => {\n    return (\n        <div className='wordCard'>\n            <h5>{text}</h5>\n        </div>\n    )\n}\n\nexport default WordCard;","export const BASE_URL = 'http://127.0.0.1:5005';","import React from 'react';\nimport { Frown, Meh, Smile, Check, Play } from 'react-feather';\nimport { ExpandedButton, WordCard } from '..';\nimport axios from 'axios';\nimport { BASE_URL } from '../../services/config';\n\nconst LeitnerWordCard: React.FC = () => {\n    const qs = require(\"query-string\");\n\n    const [word, sayWord] = React.useState(false);\n    const [start, getStart] = React.useState(false);\n    const [words, getWords] = React.useState([]);\n    const [index, setIndex] = React.useState(0);\n    const [now, getNow] = React.useState(0);\n    const [time, getTime] = React.useState(5);\n    const [alertMessage, showAlertMessage] = React.useState('');\n    const globalCycle = [1, 3, 7, 21, 40];\n    var oneDay = 24 * 60 * 60 * 1000;\n\n    React.useEffect(() => {\n        setTimeout(() => {\n            if (time > 0) {\n                getTime(time - 1);\n            }\n        }, 1000);\n        if (time === 0) {\n            showAlertMessage('');\n            getTime(5);\n        }\n        return () => clearTimeout(time);\n    }, [time])\n\n\n    const get_start = async () => {\n        var _now = Date.now()\n        getNow(_now);\n\n        var res = await axios.post(\n            `${BASE_URL}/show_words/`,\n            qs.stringify({ time_stamp: _now }),\n        );\n\n        if (Object.keys(res.data).length !== 0) {\n            getWords(res.data);\n            getStart(true);\n        }\n        else {\n            showAlertMessage('کلمه ای برای امروز وجود نداره :)');\n        }\n    }\n\n    const remember = async () => {\n        var res = await axios.post(\n            `${BASE_URL}/remember_word/`,\n            qs.stringify({\n                word: words[index][\"word\"],\n                cycle: words[index][\"cycle\"] + 1,\n                time_stamp: now + globalCycle[words[index][\"cycle\"] + 1] * oneDay\n            }),\n        );\n        if (res.status === 200) {\n            sayWord(false);\n            if (index < words.length - 1) {\n                setIndex(index + 1)\n            }\n            else {\n                getWords([]);\n                sayWord(false);\n                getStart(false);\n            }\n        }\n\n    }\n\n    const soso_remember = async () => {\n        var res = await axios.post(\n            `${BASE_URL}/remember_word/`,\n            qs.stringify({\n                word: words[index][\"word\"],\n                cycle: words[index][\"cycle\"],\n                time_stamp: now + oneDay\n            }),\n        );\n        if (res.status === 200) {\n            sayWord(false);\n            if (index < words.length - 1) {\n                setIndex(index + 1)\n            }\n            else {\n                getWords([]);\n                sayWord(false);\n                getStart(false);\n            }\n        }\n    }\n\n    const not_remember = async () => {\n        var res = await axios.post(\n            `${BASE_URL}/remember_word/`,\n            qs.stringify({\n                word: words[index][\"word\"],\n                cycle: 1,\n                time_stamp: now + oneDay\n            }),\n        );\n        if (res.status === 200) {\n            sayWord(false);\n            if (index < words.length - 1) {\n                setIndex(index + 1)\n            }\n            else {\n                getWords([]);\n                sayWord(false);\n                getStart(false);\n            }\n        }\n    }\n\n    return (\n        <>\n            {alertMessage ?\n                <div className='translate__alert'>{alertMessage}</div> :\n                <></>\n            }\n            <div className='container leitnerWordCard'>\n                <div className='col-sm-10 col-md-7'>\n                    {(words.length && start) ?\n                        <>\n                            <WordCard text={word ? words[index][\"translate\"] : words[index][\"word\"]} />\n                            {word ?\n                                <div className='leitnerWordCard__moods'>\n                                    <ExpandedButton\n                                        icon={<Smile />}\n                                        expandedText='بلد بودم'\n                                        className='leitnerWordCard__moods__mood'\n                                        btnClick={remember}\n                                    />\n                                    <ExpandedButton\n                                        icon={<Meh />}\n                                        expandedText='یکم گیر داشتم'\n                                        className='leitnerWordCard__moods__mood'\n                                        btnClick={soso_remember}\n                                    />\n                                    <ExpandedButton\n                                        icon={<Frown />}\n                                        expandedText='بلد نبودم'\n                                        className='leitnerWordCard__moods__mood'\n                                        btnClick={not_remember}\n                                    />\n                                </div> :\n                                <div className='leitnerWordCard__sayBtn'>\n                                    <ExpandedButton\n                                        icon={<Check />}\n                                        expandedText='گفتم'\n                                        className='leitnerWordCard__moods__mood'\n                                        btnClick={() => sayWord(true)}\n                                    />\n                                </div>\n                            }\n                        </> :\n                        <div>\n                            <ExpandedButton\n                                icon={<Play />}\n                                expandedText='شروع'\n                                className='leitnerWordCard__start'\n                                btnClick={get_start}\n                            />\n                        </div>\n                    }\n                </div>\n            </div>\n        </>\n\n    )\n}\n\nexport default LeitnerWordCard;","import React from 'react';\nimport { Plus, Search } from 'react-feather';\nimport { ExpandedButton, Header } from '../../components';\nimport { RouteComponentProps } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport { BASE_URL } from '../../services/config';\n\n\ntype Props = RouteComponentProps;\n\n\nclass TranslatePage extends React.Component<Props> {\n    state = {\n        alert: false,\n        alert_message: '',\n        time: 4,\n        translate: '',\n        word: '',\n        translateReadOnly: true,\n    }\n\n    componentDidUpdate() {\n        if (this.state.alert) {\n            setTimeout(() => {\n                if (this.state.time > 0) {\n                    this.setState({\n                        time: this.state.time - 1,\n                    })\n                }\n            }, 1000);\n            if (this.state.time === 0)\n                this.setState({\n                    alert: false,\n                    time: 4,\n                });\n            return () => clearTimeout(this.state.time);\n        }\n    }\n\n    render() {\n        const qs = require(\"query-string\");\n\n        const wordChange = async (e: any) => {\n            this.setState({\n                word: e.target.value,\n            })\n        };\n\n        const handleChangeTranslate = () => {\n            this.setState({ translateReadOnly: false });\n        }\n\n        const changeTranslate = (e: any) => {\n            this.setState({ translate: e.target.value });\n        }\n\n        const textareaSubmitForm = (e: any) => {\n            if (e.key === 'Enter' && e.shiftKey) {\n                translateClick();\n            }\n        }\n\n\n        const translateClick = async () => {\n            if (this.state.word) {\n                var res = await axios.post(\n                    `${BASE_URL}/translate/`,\n                    qs.stringify({ word: this.state.word }),\n                );\n                this.setState({\n                    translate: res.data,\n                })\n            }\n        }\n\n        const addToLeitner = async () => {\n\n            if (this.state.word && this.state.translate) {\n                try {\n                    var res = await axios.post(\n                        `${BASE_URL}/add_to_leitner/`,\n                        qs.stringify({\n                            word: this.state.word,\n                            translate: this.state.translate,\n                            cycle: 1,\n                            time_stamp: Date.now(),\n                        }),\n                    );\n                    if (res.status === 201)\n                        this.setState({\n                            alert: true,\n                            alert_message: 'کلمه به لایتنر اضافه شد ... :)'\n                        })\n                } catch (error) {\n                    if (error.response.status === 400)\n                        this.setState({\n                            alert: true,\n                            alert_message: 'این کلمه در لایتنر وجود داره !'\n                        })\n                }\n            }\n        }\n\n\n        return (\n            <div className='translate__layout'>\n                <Header\n                    leading={false}\n                    title='سرویس ترجمه'\n                    actionClick={() => this.props.history.push('/leitner')} />\n                {this.state.alert ?\n                    <div className='translate__alert'>{this.state.alert_message}</div> :\n                    <></>\n                }\n                <form className='translate__layout__container'>\n                    <div className='translate'>\n                        <div className='translate__box'>\n                            <div className='translate__box__translateTitle'>\n                                <span className='translate__box__title'>ترجمه</span>\n                                <span className='translate__box__lang'>\n                                    (فارسی)\n                                </span>\n                            </div>\n                            <textarea\n                                className=\"translate__box__textarea\"\n                                readOnly={this.state.translateReadOnly}\n                                value={this.state.translate}\n                                onDoubleClick={handleChangeTranslate}\n                                onChange={changeTranslate}\n                            />\n                        </div>\n                        <div className='translate__box'>\n                            <div className='translate__box__wordTitle'>\n                                <span className='translate__box__title'>کلمه</span>\n                                <span className='translate__box__lang'>\n                                    (انگلیسی)\n                                </span>\n                            </div>\n                            <textarea\n                                autoFocus\n                                onChange={wordChange}\n                                onKeyPress={textareaSubmitForm} />\n                        </div>\n                    </div>\n\n                    <div className='translate__btn'>\n                        <ExpandedButton\n                            icon={<Search />}\n                            btnClick={translateClick}\n                            expandedText='ترجمه'\n                            className='translate__btn__translate'\n                        />\n                    </div>\n                </form>\n                <ExpandedButton\n                    icon={<Plus />}\n                    expandedText='افزودن به جعبه لایتنر'\n                    className='translate__addBtn'\n                    btnClick={addToLeitner}\n                />\n            </div>\n        )\n    }\n}\n\nexport default withRouter(TranslatePage);","import React from 'react';\nimport { Header, LeitnerWordCard } from '../../components';\nimport { RouteComponentProps } from 'react-router';\nimport { withRouter } from 'react-router-dom';\n\ntype Props = RouteComponentProps;\n\nclass LeitnerPage extends React.Component<Props> {\n    render() {\n        return (\n            <div className='leitner__layout'>\n                <Header\n                    title='جعبه لایتنر'\n                    action={false}\n                    leading={true}\n                    leadingClick={() => this.props.history.goBack()}\n                />\n                <LeitnerWordCard />\n            </div>\n        )\n    }\n}\n\nexport default withRouter(LeitnerPage);","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.scss';\nimport { TranslatePage, LeitnerPage } from './pages';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={TranslatePage} />\n          <Route exact path=\"/leitner\" component={LeitnerPage} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}