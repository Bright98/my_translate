{"version":3,"sources":["webpack://src/styles/grid/_grid-func.scss","webpack://node_modules/susy/sass/susy/language/susy/_breakpoint-plugin.scss","webpack://src/styles/grid/_grid-variable.scss","webpack://node_modules/susy/sass/susy/output/support/_rem.scss","webpack://node_modules/susy/sass/susy/language/susy/_rows.scss","webpack://node_modules/susy/sass/susy/language/susy/_span.scss","webpack://node_modules/susy/sass/susy/output/shared/_direction.scss","webpack://src/styles/_font.scss","webpack://src/index.scss","webpack://src/pages/translate/translate.scss","webpack://src/styles/_mixins.scss","webpack://src/components/header/header.scss","webpack://src/styles/_color.scss","webpack://src/components/wordCard/wordCard.scss","webpack://src/components/leitnerWordCard/leitnerWordCard.scss"],"names":[],"mappings":"AAME,WACE,UAAW,CACX,eAAgB,CAChB,aAAc,CACd,eAAgB,CCwChB,UDpCE,WACE,WETY,CFUb,CCkCH,UDpCE,WACE,WEVY,CFWb,CCkCH,UDpCE,WACE,YEXc,CFYf,CAKL,KGFE,UCZ0B,CDY1B,UEyHkE,CFzHlE,WGAoC,CHApC,cE+EqB,CF/ErB,aEkFoB,CL9EpB,aAAc,CACd,oBAAqB,CAItB,iBGTC,aEwI0C,CL1H1C,qBAAsB,CAEvB,UGhBC,cEwI0C,CFxI1C,WGAoC,CNkBpC,UGlBA,eEwI0C,CFxI1C,WGAoC,CNkBpC,UGlBA,SEwI0C,CFxI1C,WGAoC,CNkBpC,UGlBA,eEwI0C,CFxI1C,WGAoC,CNkBpC,UGlBA,eEwI0C,CFxI1C,WGAoC,CNkBpC,UGlBA,SEwI0C,CFxI1C,WGAoC,CNkBpC,UGlBA,eEwI0C,CFxI1C,WGAoC,CNkBpC,UGlBA,eEwI0C,CFxI1C,WGAoC,CNkBpC,UGlBA,SEwI0C,CFxI1C,WGAoC,CNkBpC,WGlBA,eEwI0C,CFxI1C,WGAoC,CNkBpC,WGlBA,eEwI0C,CFxI1C,WGAoC,CNkBpC,WGlBA,UEwI0C,CFxI1C,WGAoC,CHApC,cE+EqB,CF/ErB,aEkFoB,CL9DnB,eAKC,cK+GwC,CLhH1C,eACE,eK+GwC,CLhH1C,eACE,SK+GwC,CLhH1C,eACE,eK+GwC,CLhH1C,eACE,eK+GwC,CLhH1C,eACE,SK+GwC,CLhH1C,eACE,eK+GwC,CLhH1C,eACE,eK+GwC,CLhH1C,eACE,SK+GwC,CLhH1C,gBACE,eK+GwC,CLhH1C,gBACE,eK+GwC,CL9GzC,eAIC,aK0GwC,CL3G1C,eACE,cK0GwC,CL3G1C,eACE,QK0GwC,CL3G1C,eACE,cK0GwC,CL3G1C,eACE,cK0GwC,CL3G1C,eACE,QK0GwC,CL3G1C,eACE,cK0GwC,CL3G1C,eACE,cK0GwC,CL3G1C,eACE,QK0GwC,CL3G1C,gBACE,cK0GwC,CL3G1C,gBACE,cK0GwC,CLzGzC,iBAIC,oBKqGwC,CLtG1C,iBACE,qBKqGwC,CLtG1C,iBACE,eKqGwC,CLtG1C,iBACE,qBKqGwC,CLtG1C,iBACE,qBKqGwC,CLtG1C,iBACE,eKqGwC,CLtG1C,iBACE,qBKqGwC,CLtG1C,iBACE,qBKqGwC,CLtG1C,iBACE,eKqGwC,CLtG1C,kBACE,qBKqGwC,CLtG1C,kBACE,qBKqGwC,CJzG1C,yBDWI,UG1CJ,cEwI0C,CFxI1C,WGAoC,CN0ChC,UG1CJ,eEwI0C,CFxI1C,WGAoC,CN0ChC,UG1CJ,SEwI0C,CFxI1C,WGAoC,CN0ChC,UG1CJ,eEwI0C,CFxI1C,WGAoC,CN0ChC,UG1CJ,eEwI0C,CFxI1C,WGAoC,CN0ChC,UG1CJ,SEwI0C,CFxI1C,WGAoC,CN0ChC,UG1CJ,eEwI0C,CFxI1C,WGAoC,CN0ChC,UG1CJ,eEwI0C,CFxI1C,WGAoC,CN0ChC,UG1CJ,SEwI0C,CFxI1C,WGAoC,CN0ChC,WG1CJ,eEwI0C,CFxI1C,WGAoC,CN0ChC,WG1CJ,eEwI0C,CFxI1C,WGAoC,CN0ChC,WG1CJ,UEwI0C,CFxI1C,WGAoC,CHApC,cE+EqB,CF/ErB,aEkFoB,CLtCf,eAKC,cKuFoC,CLxFtC,eACE,eKuFoC,CLxFtC,eACE,SKuFoC,CLxFtC,eACE,eKuFoC,CLxFtC,eACE,eKuFoC,CLxFtC,eACE,SKuFoC,CLxFtC,eACE,eKuFoC,CLxFtC,eACE,eKuFoC,CLxFtC,eACE,SKuFoC,CLxFtC,gBACE,eKuFoC,CLxFtC,gBACE,eKuFoC,CLtFrC,eAIC,aKkFoC,CLnFtC,eACE,cKkFoC,CLnFtC,eACE,QKkFoC,CLnFtC,eACE,cKkFoC,CLnFtC,eACE,cKkFoC,CLnFtC,eACE,QKkFoC,CLnFtC,eACE,cKkFoC,CLnFtC,eACE,cKkFoC,CLnFtC,eACE,QKkFoC,CLnFtC,gBACE,cKkFoC,CLnFtC,gBACE,cKkFoC,CLjFrC,iBAIC,oBK6EoC,CL9EtC,iBACE,qBK6EoC,CL9EtC,iBACE,eK6EoC,CL9EtC,iBACE,qBK6EoC,CL9EtC,iBACE,qBK6EoC,CL9EtC,iBACE,eK6EoC,CL9EtC,iBACE,qBK6EoC,CL9EtC,iBACE,qBK6EoC,CL9EtC,iBACE,eK6EoC,CL9EtC,kBACE,qBK6EoC,CL9EtC,kBACE,qBK6EoC,CL5ErC,CC7BL,yBDWI,UG1CJ,cEwI0C,CFxI1C,WGAoC,CN0ChC,UG1CJ,eEwI0C,CFxI1C,WGAoC,CN0ChC,UG1CJ,SEwI0C,CFxI1C,WGAoC,CN0ChC,UG1CJ,eEwI0C,CFxI1C,WGAoC,CN0ChC,UG1CJ,eEwI0C,CFxI1C,WGAoC,CN0ChC,UG1CJ,SEwI0C,CFxI1C,WGAoC,CN0ChC,UG1CJ,eEwI0C,CFxI1C,WGAoC,CN0ChC,UG1CJ,eEwI0C,CFxI1C,WGAoC,CN0ChC,UG1CJ,SEwI0C,CFxI1C,WGAoC,CN0ChC,WG1CJ,eEwI0C,CFxI1C,WGAoC,CN0ChC,WG1CJ,eEwI0C,CFxI1C,WGAoC,CN0ChC,WG1CJ,UEwI0C,CFxI1C,WGAoC,CHApC,cE+EqB,CF/ErB,aEkFoB,CLtCf,eAKC,cKuFoC,CLxFtC,eACE,eKuFoC,CLxFtC,eACE,SKuFoC,CLxFtC,eACE,eKuFoC,CLxFtC,eACE,eKuFoC,CLxFtC,eACE,SKuFoC,CLxFtC,eACE,eKuFoC,CLxFtC,eACE,eKuFoC,CLxFtC,eACE,SKuFoC,CLxFtC,gBACE,eKuFoC,CLxFtC,gBACE,eKuFoC,CLtFrC,eAIC,aKkFoC,CLnFtC,eACE,cKkFoC,CLnFtC,eACE,QKkFoC,CLnFtC,eACE,cKkFoC,CLnFtC,eACE,cKkFoC,CLnFtC,eACE,QKkFoC,CLnFtC,eACE,cKkFoC,CLnFtC,eACE,cKkFoC,CLnFtC,eACE,QKkFoC,CLnFtC,gBACE,cKkFoC,CLnFtC,gBACE,cKkFoC,CLjFrC,iBAIC,oBK6EoC,CL9EtC,iBACE,qBK6EoC,CL9EtC,iBACE,eK6EoC,CL9EtC,iBACE,qBK6EoC,CL9EtC,iBACE,qBK6EoC,CL9EtC,iBACE,eK6EoC,CL9EtC,iBACE,qBK6EoC,CL9EtC,iBACE,qBK6EoC,CL9EtC,iBACE,eK6EoC,CL9EtC,kBACE,qBK6EoC,CL9EtC,kBACE,qBK6EoC,CL5ErC,CC7BL,0BDWI,UG1CJ,cEwI0C,CFxI1C,WGAoC,CN0ChC,UG1CJ,eEwI0C,CFxI1C,WGAoC,CN0ChC,UG1CJ,SEwI0C,CFxI1C,WGAoC,CN0ChC,UG1CJ,eEwI0C,CFxI1C,WGAoC,CN0ChC,UG1CJ,eEwI0C,CFxI1C,WGAoC,CN0ChC,UG1CJ,SEwI0C,CFxI1C,WGAoC,CN0ChC,UG1CJ,eEwI0C,CFxI1C,WGAoC,CN0ChC,UG1CJ,eEwI0C,CFxI1C,WGAoC,CN0ChC,UG1CJ,SEwI0C,CFxI1C,WGAoC,CN0ChC,WG1CJ,eEwI0C,CFxI1C,WGAoC,CN0ChC,WG1CJ,eEwI0C,CFxI1C,WGAoC,CN0ChC,WG1CJ,UEwI0C,CFxI1C,WGAoC,CHApC,cE+EqB,CF/ErB,aEkFoB,CLtCf,eAKC,cKuFoC,CLxFtC,eACE,eKuFoC,CLxFtC,eACE,SKuFoC,CLxFtC,eACE,eKuFoC,CLxFtC,eACE,eKuFoC,CLxFtC,eACE,SKuFoC,CLxFtC,eACE,eKuFoC,CLxFtC,eACE,eKuFoC,CLxFtC,eACE,SKuFoC,CLxFtC,gBACE,eKuFoC,CLxFtC,gBACE,eKuFoC,CLtFrC,eAIC,aKkFoC,CLnFtC,eACE,cKkFoC,CLnFtC,eACE,QKkFoC,CLnFtC,eACE,cKkFoC,CLnFtC,eACE,cKkFoC,CLnFtC,eACE,QKkFoC,CLnFtC,eACE,cKkFoC,CLnFtC,eACE,cKkFoC,CLnFtC,eACE,QKkFoC,CLnFtC,gBACE,cKkFoC,CLnFtC,gBACE,cKkFoC,CLjFrC,iBAIC,oBK6EoC,CL9EtC,iBACE,qBK6EoC,CL9EtC,iBACE,eK6EoC,CL9EtC,iBACE,qBK6EoC,CL9EtC,iBACE,qBK6EoC,CL9EtC,iBACE,eK6EoC,CL9EtC,iBACE,qBK6EoC,CL9EtC,iBACE,qBK6EoC,CL9EtC,iBACE,eK6EoC,CL9EtC,kBACE,qBK6EoC,CL9EtC,kBACE,qBK6EoC,CL5ErC,CO7ET,WACE,oBAAqB,CACrB,iBAAkB,CAClB,eAAgB,CAChB,8DACA,CAAA,gUASA,CAAA,WAAA,oBACA,CAAA,iBAAA,CAAA,eAAA,CAAA,6DAAA,CAAA,4TAUA,CAAA,WAAA,oBAAA,CAAA,iBAAA,CAAA,eAAA,CAAA,+DAAA,CAAA,oUAUA,CAAA,WAAA,oBAAA,CAAA,iBAAA,CAAA,eAK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","file":"main.7a7b2c7a.chunk.css","sourcesContent":["$susy: (\r\n  columns: $columns,\r\n  gutters: $gutters,\r\n  flow: $direction,\r\n);\r\n@mixin make-container($media-value) {\r\n  .container {\r\n    width: 100%;\r\n    max-width: 650px;\r\n    margin: 0 auto;\r\n    overflow: hidden;\r\n  }\r\n  @each $i, $width in $media-value {\r\n    @include susy-media($i) {\r\n      .container {\r\n        width: $width;\r\n      }\r\n    }\r\n  }\r\n}\r\n@mixin make-row() {\r\n  .row {\r\n    @include full();\r\n    display: block;\r\n    padding: 0 10px 0 6px;\r\n    // display: flex;\r\n    // flex-wrap: wrap;\r\n    // justify-content: center;\r\n  }\r\n}\r\n@mixin make-columns($media-name) {\r\n  div[class*='col-'] {\r\n    @include post(0);\r\n    box-sizing: border-box;\r\n    // height: 100%;\r\n  }\r\n  @for $num from 1 through $columns {\r\n    .col-xs-#{$num} {\r\n      @include span($num);\r\n    }\r\n    // {flex-basis: ($num / $columns) * 100%;}\r\n  }\r\n  @for $num from 1 through ($columns)-1 {\r\n    .col-xs-pull-#{$num} {\r\n      right: span($num);\r\n    }\r\n  }\r\n  @for $num from 1 through ($columns)-1 {\r\n    .col-xs-push-#{$num} {\r\n      left: span($num);\r\n    }\r\n  }\r\n  @for $num from 1 through ($columns)-1 {\r\n    .col-xs-offset-#{$num} {\r\n      margin-left: span($num);\r\n    }\r\n  }\r\n\r\n  @each $name, $width in $media-name {\r\n    @include susy-media($width) {\r\n      @for $num from 1 through $columns {\r\n        .col-#{$name}-#{$num} {\r\n          @include span($num);\r\n        }\r\n        // {flex-basis: ($num / $columns) * 100%;}\r\n      }\r\n      @for $num from 1 through ($columns)-1 {\r\n        .col-#{$name}-pull-#{$num} {\r\n          right: span($num);\r\n        }\r\n      }\r\n      @for $num from 1 through ($columns)-1 {\r\n        .col-#{$name}-push-#{$num} {\r\n          left: span($num);\r\n        }\r\n      }\r\n      @for $num from 1 through ($columns)-1 {\r\n        .col-#{$name}-offset-#{$num} {\r\n          margin-left: span($num);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n@mixin make-grid() {\r\n  @include make-container($media-name);\r\n  @include make-row();\r\n  @include make-columns($media-name);\r\n}\r\n","// Breakpoint Integration\n// ======================\n\n$susy-media: () !default;\n$susy-media-fallback: false !default;\n\n$_susy-media-context: ();\n\n\n// Susy Breakpoint\n// ---------------\n// Change grids at different media query breakpoints.\n// - $query     : <min-width> [<max-width>] | <property> <value> | <map>\n// - $layout    : <settings>\n// - $no-query  : <boolean> | <selector>\n@mixin susy-breakpoint(\n  $query,\n  $layout: false,\n  $no-query: $susy-media-fallback\n) {\n  @include susy-media-router($query, $no-query) {\n    @if $layout {\n      @include with-layout($layout) {\n        @content;\n      }\n    } @else {\n      @content;\n    }\n  }\n}\n\n\n// Susy Media\n// ----------\n// - $query: <min-width> [<max-width>] | <property> <value>\n// - $no-query: <boolean> | <selector>\n@mixin susy-media(\n  $query,\n  $no-query: $susy-media-fallback\n) {\n  $old-context: $_susy-media-context;\n  $name: if(map-has-key($susy-media, $query), $query, null);\n  $query: susy-get-media($query);\n  $query: susy-parse-media($query);\n\n  @include susy-media-context($query, $name);\n\n  @if $no-query and type-of($no-query) != string {\n    @content;\n  } @else {\n    @media #{susy-render-media($query)} {\n      @content;\n    }\n\n    @if type-of($no-query) == string {\n      #{$no-query} & {\n        @content;\n      }\n    }\n  }\n\n  @include susy-media-context($old-context, $clean: true);\n}\n\n\n// Media Router\n// ------------\n// Rout media arguments to the correct mixin.\n@mixin susy-media-router(\n  $query,\n  $no-query: $susy-media-fallback\n) {\n  @if susy-support(breakpoint, (mixin: breakpoint), $warn: false) {\n    @include breakpoint($query, $no-query) {\n      @content;\n    }\n  } @else {\n    @include susy-media($query, $no-query) {\n      @content;\n    }\n  }\n}\n\n\n// Update Context\n// -------------\n// Set the new media context\n@mixin susy-media-context(\n  $query,\n  $name: null,\n  $clean: false\n) {\n  $query: map-merge((name: $name), $query);\n\n  @if $clean {\n    $_susy-media-context: $query !global;\n  } @else {\n    $_susy-media-context: map-merge($_susy-media-context, $query) !global;\n  }\n}\n\n\n// Media Context\n// -------------\n// Return the full media context, or a single media property (e.g. min-width)\n@function susy-media-context(\n  $property: false\n) {\n  @if $property {\n    @return map-get($_susy-media-context, $property);\n  } @else {\n    @return $_susy-media-context;\n  }\n}\n\n\n// Get Media\n// ---------\n// Return a named media-query from $susy-media.\n// - $name: <key>\n@function susy-get-media(\n  $name\n) {\n  @if map-has-key($susy-media, $name) {\n    $map-value: map-get($susy-media, $name);\n    @if ($name == $map-value) {\n      $name: $map-value;\n    } @else {\n      $name: susy-get-media($map-value);\n    }\n  }\n\n  @return $name;\n}\n\n\n// Render Media\n// ------------\n// Build a media-query string from various media settings\n@function susy-render-media(\n  $query\n) {\n  $output: null;\n  @each $property, $value in $query {\n    $string: null;\n\n    @if $property == media {\n      $string: $value;\n    } @else {\n      $string: '(#{$property}: #{$value})';\n    }\n\n    $output: if($output, '#{$output} and #{$string}', $string);\n  }\n\n  @return $output;\n}\n\n\n// Parse Media\n// -----------\n// Return parsed media-query settings based on shorthand\n@function susy-parse-media(\n  $query\n) {\n  $mq: null;\n  @if type-of($query) == map {\n    $mq: $query;\n  } @else if type-of($query) == number {\n    $mq: (min-width: $query);\n  } @else if type-of($query) == list and length($query) == 2 {\n    @if type-of(nth($query, 1)) == number {\n      $mq: (\n        min-width: min($query...),\n        max-width: max($query...),\n      );\n    } @else {\n      $mq: (nth($query, 1): nth($query, 2));\n    }\n  } @else {\n    $mq: (media: '#{$query}');\n  }\n\n  @return $mq;\n}\n","$columns: 12;\r\n$gutters: 0;\r\n$direction: rtl;\r\n\r\n$desktop-width: 1024px;\r\n$tablet-width: 480px;\r\n$mobile-width: 320px;\r\n\r\n$desktop: 1023px;\r\n$tablet: 480px;\r\n$mobile: 320px;\r\n\r\n$small:\"sm\";\r\n$medium: \"md\";\r\n$large: \"lg\";\r\n\r\n$media-name: ($small: $mobile-width, $medium: $tablet-width, $large: $desktop-width);\r\n$media-value: ($mobile-width: $mobile, $tablet-width: $tablet, $desktop-width: $desktop);","// rem Support\n// ===========\n\n// rem\n// ---\n// Check for an existing support mixin, or output directly.\n// - $prop  : <css property>\n// - $val   : <css value>\n@mixin susy-rem(\n  $prop,\n  $val\n) {\n  $_reqs: (\n    variable: rhythm-unit rem-with-px-fallback,\n    mixin: rem,\n  );\n  @if susy-support(rem, $_reqs, $warn: false) and $rhythm-unit == rem {\n    @include rem($prop, $val);\n  } @else {\n    #{$prop}: $val;\n  }\n}\n","// Row Start & End\n// ===============\n\n// Break\n// -----\n// Apply to any element that should force a line break.\n@mixin break {\n  @include output((clear: both));\n}\n\n\n// NoBreak\n// -------\n// Cancel the break() effect, e.g. when using media queries.\n@mixin nobreak {\n  @include output((clear: none));\n}\n\n\n// Full\n// ----\n// - [$context]: <layout shorthand>\n@mixin full(\n  $context: $susy\n) {\n  $inspect : $context;\n  @include susy-inspect(full, $inspect);\n  @include span(full of parse-grid($context) break);\n}\n\n\n// First\n// -----\n// - [$context]: <settings>\n@mixin first(\n  $context: $susy\n) {\n  $inspect  : $context;\n  $context  : parse-grid($context);\n  $flow     : susy-get(flow, $context);\n\n  @include susy-inspect(first, $inspect);\n  @if not(is-split($context)) {\n    @include float-first($flow);\n  }\n}\n\n@mixin alpha(\n  $context: $susy\n) {\n  @include first($context);\n}\n\n\n// Last\n// ----\n// - [$context]: <settings>\n@mixin last(\n  $context: $susy\n) {\n  $inspect  : $context;\n  $context  : parse-grid($context);\n\n  @include susy-inspect(last, $inspect);\n\n  $output: (\n    flow: susy-get(flow, $context),\n    last-flow: susy-get(last-flow, $context),\n    margin: if(is-split($context), null, 0),\n  );\n\n  @include float-last($output...);\n}\n\n@mixin omega(\n  $context: $susy\n) {\n  @include last($context);\n}\n\n\n// Get Edge\n// --------\n// Calculate edge value based on location, if possible\n@function get-edge(\n  $span\n) {\n  $span       : parse-span($span);\n  $edge       : susy-get(edge, $span);\n\n  @if not($edge) {\n    $count: susy-count(susy-get(columns, $span));\n    $location: susy-get(location, $span);\n    $n: susy-get(span, $span);\n\n    $number: if(type-of($location) == number, true, false);\n    $index: if($number and unitless($location), true, false);\n\n    @if $n == $count {\n      $edge: full;\n    } @else if $location and $n and $index {\n      @if $location == 1 {\n        $edge: if($n == $count, full, first);\n      } @else if $location + $n - 1 == $count {\n        $edge: last;\n      }\n    }\n  }\n\n  @if $edge == alpha or $edge == omega {\n    $edge: if($edge == alpha, first, last);\n  }\n\n  @return $edge;\n}\n\n\n// Get Location\n// ------------\n// Calculate location value based on edge, if possible\n@function get-location(\n  $span\n) {\n  $span       : parse-span($span);\n  $location   : susy-get(location, $span);\n  $edge       : get-edge($span);\n  $n          : susy-get(span, $span);\n\n  @if $edge and not($location) and type-of($n) == number and unitless($n) {\n    @if $edge == first {\n      $location: 1;\n    } @else if $edge == last {\n      $location: susy-count(susy-get(columns, $span)) - $n + 1;\n    }\n  }\n\n  @return $location\n}\n","// Span Syntax\n// ===========\n\n// Span [mixin]\n// ------------\n// Set a spanning element using shorthand syntax.\n// - $span  : <span>\n@mixin span(\n  $span\n) {\n  $inspect: $span;\n  $span: parse-span($span);\n  $output: span-math($span);\n  $nesting: susy-get(span, $span);\n  $clear: susy-get(clear, $span);\n\n  $box: susy-get(box-sizing, $span);\n  $content-box: if(susy-get(global-box-sizing) != 'border-box', true, false);\n  $box: $box or if(is-inside($span) and $content-box, border-box, null);\n\n  @if $clear == break {\n    @include break;\n  } @else if $clear == nobreak {\n    @include nobreak;\n  }\n\n  @include susy-inspect(span, $inspect);\n  @include output((box-sizing: $box));\n  @include float-span-output($output...);\n\n  @if valid-columns($nesting, silent) {\n    @include nested($span) { @content; }\n  } @else {\n    @content;\n  }\n}\n\n// Span [function]\n// ---------------\n// Return the width of a span.\n// - $span  : <span>\n@function span(\n  $span\n) {\n  @return get-span-width($span);\n}\n\n// Span Math\n// ---------\n// Get all the span results.\n// - $span: <map>\n@function span-math(\n  $span\n) {\n  $nest             : if(susy-get(role, $span) == nest, true, false);\n  $split-nest       : if(is-split($span) and $nest, true, false);\n  $edge             : get-edge($span);\n  $location         : get-location($span);\n\n  $float            : from;\n  $padding-before   : null;\n  $padding-after    : null;\n  $margin-before    : null;\n  $margin-after     : null;\n\n  // calculate widths\n  $spread: index(map-values($span), spread);\n  $span: if($split-nest and not($spread), map-merge($span, (spread: wide)), $span);\n  $width: get-span-width($span);\n  $gutters: get-gutters($span);\n\n  // apply gutters\n  @if is-inside($span) {\n    @if not(susy-get(role, $span)) {\n      $padding-before: map-get($gutters, before);\n      $padding-after: map-get($gutters, after);\n    }\n  } @else {\n    @if not($split-nest) {\n      $margin-before: map-get($gutters, before);\n      $margin-after: map-get($gutters, after);\n    }\n  }\n\n  // special margin handling\n  @if susy-get(output, $span) == isolate and $location {\n    $margin-before: get-isolation($span);\n    $margin-after: -100%;\n  } @else if $edge {\n    $is-split: is-split($span);\n    $pos: susy-get(gutter-position, $span);\n\n    @if $edge == last {\n      $float: susy-get(last-flow, $span);\n    }\n\n    @if not($is-split) {\n      @if $edge == full or ($edge == first and $pos == before) {\n        $margin-before: 0;\n      }\n      @if $edge == full or ($edge == last and $pos == after) {\n        $margin-after: 0;\n      }\n    }\n\n  }\n\n  @return (\n    width           : $width,\n    float           : $float,\n    margin-before   : $margin-before,\n    margin-after    : $margin-after,\n    padding-before  : $padding-before,\n    padding-after   : $padding-after,\n    flow            : susy-get(flow, $span),\n  );\n}\n\n// Get Span Width\n// --------------\n// Return span width.\n// - $span: <map>\n@function get-span-width(\n  $span\n) {\n  $span     : parse-span($span);\n\n  $n        : susy-get(span, $span);\n  $location : get-location($span);\n  $columns  : susy-get(columns, $span);\n  $gutters  : susy-get(gutters, $span);\n  $spread   : susy-get(spread, $span);\n\n  $context  : null;\n  $span-sum : null;\n  $width    : null;\n\n  @if $n == 'full' {\n    $pos: susy-get(gutter-position, $span);\n    $role: susy-get(role, $span);\n    $n: if($pos == split and $role != nest, susy-count($columns), 100%);\n  }\n\n  @if type-of($n) != number {\n    @warn \"(#{type-of($n)}) #{$n} is not a valid span.\";\n  } @else if unitless($n) {\n    $context: susy-sum($columns, $gutters, if(is-split($span), wide, narrow));\n    $spread: if(is-inside($span), $spread or wide, $spread);\n    $span-sum: susy($n, $location, $columns, $gutters, $spread);\n\n    $_math: susy-get(math, $span);\n    $_column-width: susy-get(column-width, $span);\n    @if $_math == static {\n      $width: $span-sum * valid-column-math($_math, $_column-width);\n    } @else {\n      $width: percentage($span-sum / $context);\n    }\n  } @else {\n    $width: $n;\n  }\n\n  @return $width;\n}\n","// Direction Helpers\n// =================\n\n// Susy Flow Defaults\n// ------------------\n// - PRIVATE\n@include susy-defaults((\n  flow: ltr,\n));\n\n// Get Direction\n// -------------\n// Return the 'from' or 'to' direction of a ltr or rtl flow.\n// - [$flow]  : ltr | rtl\n// - [$key]   : from | to\n@function get-direction(\n  $flow: map-get($susy-defaults, flow),\n  $key: from\n) {\n  $return: if($flow == rtl, (from: right, to: left), (from: left, to: right));\n  @return map-get($return, $key);\n}\n\n// To\n// --\n// Return the 'to' direction of a flow\n// - [$flow]  : ltr | rtl\n@function to(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, to);\n}\n\n// From\n// ----\n// Return the 'from' direction of a flow\n// - [$flow]  : ltr | rtl\n@function from(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, from);\n}\n","$font_family : 'IRANSans';\r\n\r\n@font-face {\r\n  font-family: IRANSans;\r\n  font-style: normal;\r\n  font-weight: 900;\r\n  src: url('../assets/fonts/eot/IRANSansWeb(FaNum)_Black.eot');\r\n  src: url('../assets/fonts/eot/IRANSansWeb(FaNum)_Black.eot?#iefix') format('embedded-opentype'),  /* IE6-8 */\r\n     url('../assets/fonts/woff2/IRANSansWeb(FaNum)_Black.woff2') format('woff2'),  /* FF39+,Chrome36+, Opera24+*/\r\n     url('../assets/fonts/woff/IRANSansWeb(FaNum)_Black.woff') format('woff'),  /* FF3.6+, IE9, Chrome6+, Saf5.1+*/\r\n     url('../assets/fonts/ttf/IRANSansWeb(FaNum)_Black.ttf') format('truetype');\r\n}\r\n@font-face {\r\n  font-family: IRANSans;\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  src: url('../assets/fonts/eot/IRANSansWeb(FaNum)_Bold.eot');\r\n  src: url('../assets/fonts/eot/IRANSansWeb(FaNum)_Bold.eot?#iefix') format('embedded-opentype'),  /* IE6-8 */\r\n     url('../assets/fonts/woff2/IRANSansWeb(FaNum)_Bold.woff2') format('woff2'),  /* FF39+,Chrome36+, Opera24+*/\r\n     url('../assets/fonts/woff/IRANSansWeb(FaNum)_Bold.woff') format('woff'),  /* FF3.6+, IE9, Chrome6+, Saf5.1+*/\r\n     url('../assets/fonts/ttf/IRANSansWeb(FaNum)_Bold.ttf') format('truetype');\r\n}\r\n@font-face {\r\n  font-family: IRANSans;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  src: url('../assets/fonts/eot/IRANSansWeb(FaNum)_Medium.eot');\r\n  src: url('../assets/fonts/eot/IRANSansWeb(FaNum)_Medium.eot?#iefix') format('embedded-opentype'),  /* IE6-8 */\r\n     url('../assets/fonts/woff2/IRANSansWeb(FaNum)_Medium.woff2') format('woff2'),  /* FF39+,Chrome36+, Opera24+*/\r\n     url('../assets/fonts/woff/IRANSansWeb(FaNum)_Medium.woff') format('woff'),  /* FF3.6+, IE9, Chrome6+, Saf5.1+*/\r\n     url('../assets/fonts/ttf/IRANSansWeb(FaNum)_Medium.ttf') format('truetype');\r\n}\r\n@font-face {\r\n  font-family: IRANSans;\r\n  font-style: normal;\r\n  font-weight: 300;\r\n  src: url('../assets/fonts/eot/IRANSansWeb(FaNum)_Light.eot');\r\n  src: url('../assets/fonts/eot/IRANSansWeb(FaNum)_Light.eot?#iefix') format('embedded-opentype'),  /* IE6-8 */\r\n     url('../assets/fonts/woff2/IRANSansWeb(FaNum)_Light.woff2') format('woff2'),  /* FF39+,Chrome36+, Opera24+*/\r\n     url('../assets/fonts/woff/IRANSansWeb(FaNum)_Light.woff') format('woff'),  /* FF3.6+, IE9, Chrome6+, Saf5.1+*/\r\n     url('../assets/fonts/ttf/IRANSansWeb(FaNum)_Light.ttf') format('truetype');\r\n}\r\n@font-face {\r\n  font-family: IRANSans;\r\n  font-style: normal;\r\n  font-weight: 200;\r\n  src: url('../assets/fonts/eot/IRANSansWeb(FaNum)_UltraLight.eot');\r\n  src: url('../assets/fonts/eot/IRANSansWeb(FaNum)_UltraLight.eot?#iefix') format('embedded-opentype'),  /* IE6-8 */\r\n     url('../assets/fonts/woff2/IRANSansWeb(FaNum)_UltraLight.woff2') format('woff2'),  /* FF39+,Chrome36+, Opera24+*/\r\n     url('../assets/fonts/woff/IRANSansWeb(FaNum)_UltraLight.woff') format('woff'),  /* FF3.6+, IE9, Chrome6+, Saf5.1+*/\r\n     url('../assets/fonts/ttf/IRANSansWeb(FaNum)_UltraLight.ttf') format('truetype');\r\n}\r\n@font-face {\r\n  font-family: IRANSans;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  src: url('../assets/fonts/eot/IRANSansWeb(FaNum).eot');\r\n  src: url('../assets/fonts/eot/IRANSansWeb(FaNum).eot?#iefix') format('embedded-opentype'),  /* IE6-8 */\r\n     url('../assets/fonts/woff2/IRANSansWeb(FaNum).woff2') format('woff2'),  /* FF39+,Chrome36+, Opera24+*/\r\n     url('../assets/fonts/woff/IRANSansWeb(FaNum).woff') format('woff'),  /* FF3.6+, IE9, Chrome6+, Saf5.1+*/\r\n     url('../assets/fonts/ttf/IRANSansWeb(FaNum).ttf') format('truetype');\r\n}\r\n\r\n$font-reqular: normal;\r\n$font-ultralight: 200;\r\n$font-medium: 500;\r\n$font-light:300;","html, body {\r\n  margin: 0;\r\n  padding: 0;\r\n  scroll-behavior: smooth;\r\n  overflow-x: hidden;\r\n  height: 100%;\r\n  font-family: $font_family;\r\n}\r\n#root {\r\n    direction: rtl;\r\n    height: 100%;\r\n}\r\n\r\n::-webkit-scrollbar\r\n{\r\n  width: 7px;\r\n}\r\n\r\n::-webkit-scrollbar-thumb\r\n{\r\n  border-radius: 50px;\r\n  background: gray;\r\n}",".translate {\r\n    display: flex;\r\n    flex-direction: row;\r\n\r\n    @media (min-width: 300px) and (max-width: 700px) {\r\n        flex-direction: column;\r\n    }\r\n    \r\n    &__layout {\r\n        @include layout;\r\n        position: relative;\r\n\r\n        &__container {\r\n            width: 90%;\r\n            \r\n            @media (min-width: 300px) and (max-width: 700px) {\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n\r\n    &__alert {\r\n        position: absolute;\r\n        display: flex;\r\n        justify-content: center;\r\n        background-color: $extra_light_primary;\r\n        color: $dark_primary;\r\n        padding: 7px 15px;\r\n        border-radius: 10px;\r\n        margin-top: 40px;\r\n    }\r\n\r\n    &__box {\r\n        margin-top: 50px;\r\n        margin-bottom: 10px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        padding: 0 10px;\r\n        width: 100%;\r\n        box-sizing: border-box;\r\n\r\n        @media (min-width: 300px) and (max-width: 700px) {\r\n            margin-bottom: 0;\r\n        }\r\n\r\n        & > textarea {\r\n            height: 100%;\r\n            @include input;\r\n            resize: vertical;\r\n            height: 80px;\r\n        }\r\n        \r\n        &__title {\r\n            margin: 7px 0;\r\n            font-size: 18px;\r\n            font-weight: 500;\r\n            color: $dark_secondary;\r\n        }\r\n\r\n        &__translateBox {\r\n            background-color: $secondary;\r\n            padding: 15px;\r\n            border-radius: 10px;\r\n            height: 100%;\r\n            height: 80px;\r\n            box-sizing: border-box;\r\n        }\r\n\r\n        &__lang {\r\n            margin: 0 10px;\r\n            font-size: 10px;\r\n            font-weight: 200;\r\n            color: $dark_secondary;\r\n        }\r\n\r\n        &__translateTitle {\r\n            display: flex;\r\n            align-items: center;\r\n        }\r\n\r\n        &__wordTitle {\r\n            display: flex;\r\n            flex-direction: row-reverse;\r\n            align-items: center;\r\n\r\n            @media (min-width: 300px) and (max-width: 700px) {\r\n                flex-direction: row;\r\n            }\r\n        }\r\n    }\r\n\r\n    &__addBtn {\r\n        background-color: $extra_dark_secondary;\r\n        position: fixed;\r\n        bottom: 20px;\r\n        right: 20px;\r\n        \r\n        & > span, svg {\r\n            color: $dark_primary;\r\n        }\r\n    }\r\n\r\n    &__btn {\r\n        padding: 60px 0;\r\n        display: flex;\r\n        justify-content: center;\r\n\r\n        &__translate {\r\n            background-color: $extra_light_primary;\r\n\r\n            & > svg, span {\r\n                color: $primary;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","@mixin input {\r\n    background-color: $secondary;\r\n    border-radius: 10px;\r\n    font-family: $font_family;\r\n    box-sizing: border-box;\r\n    font-size: 16px;\r\n    border: none;\r\n    outline: none;\r\n    padding: 15px;\r\n    width: 100%;\r\n    direction: ltr;\r\n\r\n    &::placeholder {\r\n        font-size: 14px;\r\n        color: gray;\r\n    }\r\n}\r\n\r\n@mixin hoverButton {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    padding: 7px;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n\r\n    & > span {\r\n        padding-left: 10px;\r\n        display: none;\r\n        font-size: 11px;\r\n        transition: display;\r\n    }\r\n\r\n    & > svg {\r\n        display: flex;\r\n        width: 20px;\r\n        height: 20px;\r\n        stroke-width: 1.5;\r\n    }\r\n\r\n    &:hover {\r\n        & > span {\r\n            display: flex;\r\n        }\r\n    }\r\n}\r\n\r\n@mixin layout {\r\n    height: 100%;\r\n    background-color: $primary;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}",".header {\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    padding: 10px 20px;\r\n    background-color: $light_primary;\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    &__titleLeading {\r\n        display: flex;\r\n\r\n        & > h4 {\r\n            margin: 0;\r\n            font-size: 20px;\r\n            color: $extra_light_primary;\r\n        }\r\n    }\r\n\r\n\r\n    &__actions {\r\n        background-color: $extra_light_primary;\r\n\r\n        & > span, svg {\r\n            color: $primary;\r\n        }\r\n    }\r\n\r\n    &__leading {\r\n        background-color: $extra_light_primary;\r\n        margin-left: 10px;\r\n\r\n        & > svg {\r\n            color: $primary;\r\n        }\r\n    }\r\n}","$extra_light_primary: #85929E;\r\n$light_primary: #5D6D7E;\r\n$primary: #283747;\r\n$dark_primary: #1B2631;\r\n\r\n$secondary : #F5CBA7;\r\n$dark_secondary: #F0B27A;\r\n$extra_dark_secondary: #DC7633;",".wordCard {\r\n    height: 100%;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    border-radius: 15px;\r\n    background-color: $secondary;\r\n    padding: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    & > h5 {\r\n        margin: 0;\r\n        font-size: 20px;\r\n        color: $dark_primary;\r\n    }\r\n}",".leitnerWordCard {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding-top: 50px;\r\n    height: 100%;\r\n\r\n    & > .col-md-7 {\r\n        height: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    &__moods {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        width: 100%;\r\n        margin: 50px 0;\r\n\r\n        &__mood {\r\n            background-color: $dark_secondary;\r\n\r\n            & > svg,span {\r\n                color: $dark_primary;\r\n            }\r\n        }\r\n    }\r\n\r\n    &__sayBtn {\r\n        display: flex;\r\n        justify-content: center;\r\n        margin: 50px 0;\r\n    }\r\n\r\n    &__start {\r\n        background-color: $extra_dark_secondary;\r\n\r\n        & > svg, span {\r\n            color: $dark_primary;\r\n        }\r\n    }\r\n}"]}